^^^^& LAB5_12 $^^^^

#!/bin/bash
if [ $# -ne 0 ]; then
	echo "No arguments needed"
	exit 1
fi

last -w | cut -f1 -d' ' | grep -v wtmp | grep -v '^$' | sort | uniq -c | sort -n

--------------------------------------------------------------------------

^^^^& LAB5_13 $^^^^

#!/bin/bash
if [ $# -ne 1 ]; then
	echo "Enter one parameter" 1>&2; exit 1;
fi
if [ ! -f $1 ]; then
        echo "There is no such file" 1>&2; exit 2;
fi
echo "13_a"
cut -d/ -f3 file5_13
echo "13_b"
cut -d/ -f3 file5_13 | sort | uniq -c

--------------------------------------------------------------------------

^^^^& LAB5_1 $^^^^

#!/bin/bash

for i in *; do
        # echo "in step $i"
        if [ -f "$i" ] ; then
                echo "$i is a file"
        elif [ -d "$i" ] ; then
                echo "$i is a dir"
        else
                echo"$i is something else"
        fi
done

--------------------------------------------------------------------------

^^^^& LAB5_2 $^^^^

#!/bin/bash

if (($#!=1)); then
        echo "Usage: $0 prefix" 1>&2
        exit 1
fi

prefix="$1"

for((i=1;i<51;i++)); do
        touch "$prefix.$i"
done

--------------------------------------------------------------------------

^^^^& LAB5_3 $^^^^

#!/bin/bash

dir="$1" #dilwsi katalogoy

#dimioyrgia newn katalogwn mesa ston arxiko
dir1="$dir/a"
dir2="$dir/b"

#elegxos an yparxei to dir1
if [ -e "$dir1" ] ; then
        echo "$dir1 exists" 1>&2
        exit 1
fi

#elegxos an uparxei to dir2
if [ -e "$dir2" ] ; then
        echo "$dir2 exists" 1?&2
        exit 1
fi

mkdir "$dir1" "$dir2" #ftiaxnw toys katalogous

#metakinisi
mv "$dir/"[0-5]* "$dir1"
mv "$dir/"[6-9]* "$dir2"

#elegxos plhthous arxeiwn
echo -n "Files in $dir1: "
ls "$dir1" | wc -l

echo -n "Files in $dir2: "
ls "$dir2" | wc -l

--------------------------------------------------------------------------

^^^^& LAB5_4 $^^^^

#!/bin/bash

#check number of arguments
if (( $# != 1 )); then
        echo "wrong number of arguments" 1>&2
        echo "Usage: s4 file" 1>&2
        exit 1

file="$1"

#elegxos an yparxei o katalogos
if [[ -e "$file" ]] ; then
        echo "./"
fi

#elegxei an yparxei to arxeio sto cwd h se upokatalogo
for i in *; do
        if [[ -e "$i/$file" ]] ; then
                echo "$i"
        fi
done

--------------------------------------------------------------------------

^^^^& LAB5_4 $^^^^
(2os tropos lyshs)

#!/bin/bash

if (( $# != 1 )) ; then
        echo "error....." 1>&2
        exit 1
fi

file=$1"

if [[ -e "$file" ]]; then
        echo '.'
fi

for dir in ./ */ ; do
        if [[ -e "dir/$file" ]]; then
                echo "$dir"
        fi
done

--------------------------------------------------------------------------

----askisi-----

#!/bin/bash

if (( $# =! 2 )) ; then
        echo "error...." 1>&2
        exit 1
fi

file="$1"
room="$2"

if [[ ! -f "$file" ]] ; then
        echo "error !!! " 1>&2
        exit 2
fi

if [[ ! -r "$file" ]]; then
        echo "error ! cannot read " 1>&2
        exit3
fi

egrep ":$room[0-9] {2}:" "$file"

--------------------------------------------------------------------------

----askisi----


if [ "$#" -ne 2 ] ; then
echo "Wrong number of args." 1>&2
echo "You must give 2 args." 1>&2
exit 1
fi

--------------------------------------------------------------------------

----askisi----

#!/bin/bash

if [ "$#" -ne 2 ] ; then
echo "Wrong number of args." 1>&2
echo "You must give 2 args." 1>&2
exit 1
fi

file="$1"
dir="$2"

if [ ! -f "$1" ] ; then
echo "$1 is not a file." 1>&2
exit 2
fi
if [ ! -d "$2" ] ; then
echo "$2 is not a directory." 1>&2
exit 3
fi
echo "File: $file"
echo "Directory: $dir"

--------------------------------------------------------------------------


